version: 2

aliases:
  # build environment
  - &docker-linux
    docker:
      - image: centos:7
    working_directory: /root/src

  # system dependencies
  - &install-system-deps
    run:
      name: Install system dependencies
      command: scripts/install-system-deps.sh
  - &install-stack
    run:
      name: Install stack
      command: |
        curl -sSL https://get.haskellstack.org/ | sh
        stack --version

  # cache
  - &build-cache-key
    run:
      name: Build cache key
      command: |
        FILES=(
          stack.yaml
          ztar.cabal
        )
        cat "${FILES[@]}" > cache-key.txt
  - &cache-key
    v0-{{ checksum "cache-key.txt" }}
  - &install-stack-deps
    run:
      name: Build external dependencies
      command: stack build --test --only-dependencies

  # build steps
  - &run-build
    run:
      name: Build package
      command: stack build ztar --test --no-run-tests --flag ztar:dev

  # test steps
  - &run-example-test
    run:
      name: Run example test
      command: |
        # call executable directly to avoid installing stack or any system dependencies
        eval "$(find .stack-work -type f -name example)"

jobs:
  prebuild:
    <<: *docker-linux
    steps:
      - checkout
      - *build-cache-key
      - persist_to_workspace:
          root: .
          paths:
            - cache-key.txt

  build:
    <<: *docker-linux
    steps:
      - checkout
      - attach_workspace:
          at: .
      - *install-system-deps
      - *install-stack
      - restore_cache:
          key: *cache-key
      - *install-stack-deps
      - save_cache:
          key: *cache-key
          paths:
            - ~/.stack
      - *run-build
      - persist_to_workspace:
          root: .
          paths:
              - .stack-work

  run-example-test:
    <<: *docker-linux
    steps:
      - checkout
      - attach_workspace:
          at: .
      - *run-example-test

workflows:
  version: 2

  build_and_test:
    jobs:
      - prebuild
      - build:
          requires:
            - prebuild
      - run-example-test:
          requires:
            - build

  nightly:
    triggers:
      - schedule:
          cron: "0 8 * * *"  # midnight PST
          filters:
            branches:
              only:
                - master
    jobs:
      - prebuild
      - build:
          requires:
            - prebuild
      - run-example-test:
          requires:
            - build
