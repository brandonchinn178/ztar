version: 2

aliases:
  # CircleCI
  - &nightly-only
    triggers:
      - schedule:
          cron: "0 8 * * *"  # midnight PST
          filters:
            branches:
              only:
                - master

  # build environment
  - &docker-linux
    docker:
      - image: centos:7
    working_directory: /root/src
  - &with-typed-paths
    environment:
      TYPED_PATHS: true

  # system dependencies
  - &install-system-deps
    run:
      name: Install system dependencies
      command: scripts/install-system-deps.sh
  - &install-stack
    run:
      name: Install stack
      command: |
        curl -sSL https://get.haskellstack.org/ | sh
        stack --version

  # cache
  - &build-cache-key
    run:
      name: Build cache key
      command: |
        FILES=(
          stack.yaml
          ztar.cabal
        )
        cat "${FILES[@]}" > cache-key.txt
  - &cache-key
    v0-{{ checksum "cache-key.txt" }}
  - &install-stack-deps
    run:
      name: Build external dependencies
      command: stack build --test --only-dependencies

  # build steps
  - &run-build
    run:
      name: Build package
      command: |
        STACK_FLAGS=(
          --test --no-run-tests
          --flag ztar:dev
        )
        if [[ -n "$TYPED_PATHS" ]]; then
          STACK_FLAGS+=(--flag ztar:typed-paths)
        fi
        echo "STACK_FLAGS: ${STACK_FLAGS[*]}"
        stack build ztar "${STACK_FLAGS[@]}"

  # test steps
  - &run-example-test
    run:
      name: Run example test
      command: |
        # call executable directly to avoid installing stack or any system dependencies
        # tests that ztar doesn't introduce any system dependencies
        eval "$(find .stack-work -type f -name example)"
  - &run-integration-tests
    run:
      name: Run integration tests
      command: |
        STACK_FLAGS=(
          --flag ztar:dev
        )
        if [[ -n "$TYPED_PATHS" ]]; then
          STACK_FLAGS+=(--flag ztar:typed-paths)
        fi
        echo "STACK_FLAGS: ${STACK_FLAGS[*]}"
        stack test :ztar-test "${STACK_FLAGS[@]}"

  # job steps
  - &build-steps
    - checkout
    - attach_workspace:
        at: .
    - *install-system-deps
    - *install-stack
    - restore_cache:
        key: *cache-key
    - *install-stack-deps
    - save_cache:
        key: *cache-key
        paths:
          - ~/.stack
    - *run-build
    - persist_to_workspace:
        root: .
        paths:
            - .stack-work
  - &example-test-steps
    - checkout
    - attach_workspace:
        at: .
    - *run-example-test
  - &integration-test-steps
    - checkout
    - attach_workspace:
        at: .
    - *install-stack
    - restore_cache:
        key: *cache-key
    - *run-integration-tests

jobs:
  prebuild:
    <<: *docker-linux
    steps:
      - checkout
      - *build-cache-key
      - persist_to_workspace:
          root: .
          paths:
            - cache-key.txt

  build:
    <<: *docker-linux
    steps: *build-steps

  build-typed-paths:
    <<: [*docker-linux, *with-typed-paths]
    steps: *build-steps

  run-example-test:
    <<: *docker-linux
    steps: *example-test-steps

  run-example-test-typed-paths:
    <<: [*docker-linux, *with-typed-paths]
    steps: *example-test-steps

  run-integration-tests:
    <<: *docker-linux
    steps: *integration-test-steps

  run-integration-tests-typed-paths:
    <<: [*docker-linux, *with-typed-paths]
    steps: *integration-test-steps

workflows:
  version: 2

  build_and_test:
    jobs:
      - prebuild
      - build:
          requires:
            - prebuild
      - run-example-test:
          requires:
            - build
      - run-integration-tests:
          requires:
            - build

  build_and_test_typed_paths:
    jobs:
      - prebuild
      - build-typed-paths:
          requires:
            - prebuild
      - run-example-test-typed-paths:
          requires:
            - build-typed-paths
      - run-integration-tests-typed-paths:
          requires:
            - build-typed-paths

  nightly:
    <<: *nightly-only
    jobs:
      - prebuild
      - build:
          requires:
            - prebuild
      - run-example-test:
          requires:
            - build
      - run-integration-tests:
          requires:
            - build

  nightly_typed_paths:
    <<: *nightly-only
    jobs:
      - prebuild
      - build-typed-paths:
          requires:
            - prebuild
      - run-example-test-typed-paths:
          requires:
            - build-typed-paths
      - run-integration-tests-typed-paths:
          requires:
            - build-typed-paths
